# Generated by Django 4.2.3 on 2023-10-10 16:47

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exemplos', '0002_alter_e122_t0_alter_e122_ta0'),
    ]

    operations = [
        migrations.CreateModel(
            name='E125',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FA', models.FloatField(default=100, help_text='mol/s', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(1000, message='O valor deve ser menor que 1000')])),
                ('FB', models.FloatField(default=0, help_text='mol/s', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(1000, message='O valor deve ser menor que 1000')])),
                ('FC', models.FloatField(default=0, help_text='mol/s', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(1000, message='O valor deve ser menor que 1000')])),
                ('T', models.FloatField(default=423, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')])),
                ('V', models.FloatField(default=0)),
                ('ΔH1', models.FloatField(default=-55000, help_text='J/molA')),
                ('ΔH2', models.FloatField(default=-71500, help_text='J/molB')),
            ],
        ),
        migrations.DeleteModel(
            name='Const',
        ),
        migrations.DeleteModel(
            name='Dados',
        ),
        migrations.AlterField(
            model_name='e102',
            name='PB0',
            field=models.FloatField(default=0, help_text='atm', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e102',
            name='PH20',
            field=models.FloatField(default=18, help_text='atm', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e102',
            name='PT0',
            field=models.FloatField(default=12, help_text='atm', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e124',
            name='T0',
            field=models.FloatField(default=550, help_text='R', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='CA0',
            field=models.FloatField(default=0.3, help_text='mol/L', validators=[django.core.validators.MinValueValidator(0.1, message='O valor deve ser maior que 0,1'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='T0',
            field=models.FloatField(default=283, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='Ta0',
            field=models.FloatField(default=330, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='Tf',
            field=models.FloatField(default=740, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='UA',
            field=models.FloatField(default=40000, help_text='J/min⋅K', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100000, message='O valor deve ser menor que 100000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='V',
            field=models.FloatField(default=10, help_text='L/min', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(1000, message='O valor deve ser menor que 1000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='v0',
            field=models.FloatField(default=1000, help_text='L/min', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(10000, message='O valor deve ser menor que 10000')]),
        ),
        migrations.AlterField(
            model_name='e127',
            name='FA',
            field=models.FloatField(default=5, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e127',
            name='FB',
            field=models.FloatField(default=10, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e127',
            name='FC',
            field=models.FloatField(default=0, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e127',
            name='FD',
            field=models.FloatField(default=0, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e127',
            name='T',
            field=models.FloatField(default=300, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e127',
            name='Ta0',
            field=models.FloatField(default=325, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e131',
            name='T0',
            field=models.FloatField(default=286, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='e131',
            name='X0',
            field=models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(1, message='O valor deve ser menor que 1')]),
        ),
        migrations.AlterField(
            model_name='e135',
            name='CAi',
            field=models.FloatField(default=1, help_text='mol/L', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e135',
            name='CBi',
            field=models.FloatField(default=0, help_text='mol/L', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e135',
            name='CCi',
            field=models.FloatField(default=0, help_text='mol/L', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='e135',
            name='Ti',
            field=models.FloatField(default=290, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='p1216',
            name='T0',
            field=models.FloatField(default=280, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='p1223',
            name='FA0',
            field=models.FloatField(default=5, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='p1223',
            name='FB0',
            field=models.FloatField(default=0, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='p1223',
            name='FC0',
            field=models.FloatField(default=0, help_text='mol/min', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')]),
        ),
        migrations.AlterField(
            model_name='p1223',
            name='T0',
            field=models.FloatField(default=300, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
        migrations.AlterField(
            model_name='p1223',
            name='Ta0',
            field=models.FloatField(default=320, help_text='K', validators=[django.core.validators.MinValueValidator(1, message='O valor deve ser maior que 1'), django.core.validators.MaxValueValidator(2000, message='O valor deve ser menor que 2000')]),
        ),
    ]
