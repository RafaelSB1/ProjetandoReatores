# Generated by Django 4.2.3 on 2024-04-07 15:20

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('exemplos', '0003_e125_delete_const_delete_dados_alter_e102_pb0_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DTR1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t', models.CharField(default='[0, 5, 10, 15, 20, 30, 40, 50, 70, 100, 150, 200]', help_text='min', max_length=1000)),
                ('C(t)', models.CharField(default='[112, 95.8, 82.2, 70.6, 60.9, 45.6, 34.5, 26.3, 15.7, 7.67, 2.55, 0.90]', help_text='mg/dm³', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='DTR2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t', models.CharField(default='[4, 8, 10, 14, 16, 18]', help_text='min', max_length=1000)),
                ('C(t)', models.CharField(default='[1000, 1333, 1500, 1666, 1750, 1800]', help_text='mg/dm³', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='E103',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('W', models.FloatField(default=0)),
                ('X', models.FloatField(default=290)),
                ('p', models.FloatField(default=1)),
                ('PT0', models.FloatField(default=12, help_text='atm', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')])),
                ('PH20', models.FloatField(default=18, help_text='atm', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')])),
                ('PB0', models.FloatField(default=0, help_text='atm', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100, message='O valor deve ser menor que 100')])),
            ],
        ),
        migrations.CreateModel(
            name='E104',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AlterField(
            model_name='e125',
            name='ΔH1',
            field=models.FloatField(default=-20000, help_text='J/molA'),
        ),
        migrations.AlterField(
            model_name='e125',
            name='ΔH2',
            field=models.FloatField(default=-60000, help_text='J/molB'),
        ),
        migrations.AlterField(
            model_name='e126',
            name='UA',
            field=models.FloatField(default=40000, help_text='J/(min⋅K)', validators=[django.core.validators.MinValueValidator(0, message='O valor deve ser maior que 0'), django.core.validators.MaxValueValidator(100000, message='O valor deve ser menor que 100000')]),
        ),
        migrations.AlterField(
            model_name='e126',
            name='cpA',
            field=models.FloatField(default=200, help_text='J/(mol ⋅ K)'),
        ),
        migrations.AlterField(
            model_name='e126',
            name='cpB',
            field=models.FloatField(default=200, help_text='J/(mol ⋅ K)'),
        ),
        migrations.AlterField(
            model_name='e126',
            name='cpC',
            field=models.FloatField(default=200, help_text='J/(mol ⋅ K)'),
        ),
    ]
